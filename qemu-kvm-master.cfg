# -*- python -*-
# ex: set syntax=python:

###
# buildermaster config file from buildbot.b1-systems.de
# author: Daniel Gollub <gollub@b1-systems.de>
# author: Christian Berendt <berendt@b1-systems.de>
##

###
# Changelog:
# - 20100514, Christian Berendt <berendt@b1-systems.de>
# * removed buildbot avi-kvmbot1 with all dependencies
# * removed unused bot-arrays
# * removed commented unused builders

####
# Namenschemata: 

#builders.append({
#  'name': 'FACTORYNAME-ARCHITEKTUR{-DISTRIBUTION}{-VERSION}',
#  'slavenames': bots-ARCHITEKTUR{-DISTRIBUTION}{-VERSION},
#  'builddir': 'FACOTRYNAME-ARCHITEKTUR{-DISTRIBUTION}{-VERSION}',
#  'factory': f_FACTORYNAME
#})

# Slave Admins:
# b1 -> Christian Berendt, Daniel Gollub
# ...

# Botnamen:
# ADMIN-PROJECT-1
# ADMIN-PROJECT-2
# ...

####

import sys
sys.path.append('/var/lib/buildbot/qemu-kvm')
from database_authority import *

c = BuildmasterConfig = {}

####### PROJECT IDENTITY
c['projectName'] = "qemu-kvm"
c['projectURL'] = "http://www.linux-kvm.org/"
c['buildbotURL'] = "http://buildbot.b1-systems.de/qemu-kvm/"

from buildbot.steps.source import Git
repository = Git(repourl="git://git.kernel.org/pub/scm/virt/kvm/qemu-kvm")

emailAddressFrom = "qemu-kvm@buildbot.b1-systems.de"
emailAddressesNotify = ["kvm@vger.kernel.org"]

####### STATUS TARGETS

c['status'] = []

from buildbot.status import html
c['status'].append(html.WebStatus("tcp:3000:interface=127.0.0.1"))
#c['status'].append(html.Waterfall("tcp:3001:interface=127.0.0.1"))

from buildbot.status import mail
c['status'].append(
  mail.MailNotifier(
    fromaddr=emailAddressFrom,
    mode='problem', # only send mail about a build which failed when the previous build passed
    extraRecipients=emailAddressesNotify,
    sendToInterestedUsers=False
  )
)

#####################################################################
# BUILDSLAVES

c['slaves'] = database_authority

bots_i386_debian_5_0 = ["b1_qemu_kvm_2"]
bots_i386_debian = bots_i386_debian_5_0

bots_i386 = bots_i386_debian

bots_x86_64_debian_5_0 = ["b1_qemu_kvm_1"]
bots_x86_64_debian = bots_x86_64_debian_5_0

bots_x86_64 = bots_x86_64_debian

bots_all = bots_i386 + bots_x86_64

# max_builds = 2 # limits to two concurrent builds

c['slavePortnum'] = 9989

#####################################################################
# CHANGESOURCES

from buildbot.changes.pb import PBChangeSource
c['change_source'] = PBChangeSource()

#####################################################################
# SCHEDULERS

from buildbot.scheduler import Scheduler, Periodic, Nightly, AnyBranchScheduler

default_builders = [
 "default_x86_64_debian_5_0",
 "default_i386_debian_5_0",

## Out of Tree Builders ##
 "default_x86_64_out_of_tree",
 "default_i386_out_of_tree",
]

disable_kvm_builders = [
 "disable_kvm_x86_64_debian_5_0",
 "disable_kvm_i386_debian_5_0",

## Out of Tree Builders ##
 "disable_kvm_x86_64_out_of_tree",
 "disable_kvm_i386_out_of_tree",
]

testBuilders = [
 "default_x86_64_debian_5_0",
 "default_i386_debian_5_0",
 "disable_kvm_x86_64_debian_5_0",
 "disable_kvm_i386_debian_5_0",
## Out of Tree Builders ##
 "default_x86_64_out_of_tree",
 "default_i386_out_of_tree",
 "disable_kvm_x86_64_out_of_tree",
 "disable_kvm_i386_out_of_tree",
]


c['schedulers'] = []

c['schedulers'].append(
  Nightly(
    name="nightly_default",
    branch="master",
    builderNames=default_builders,
    hour=3, minute=3
  )
)

c['schedulers'].append(
  Nightly(
    name="nightly_disable_kvm",
    branch="master",
    builderNames=disable_kvm_builders,
    hour=4, minute=3
  )
)

c['schedulers'].append(
  AnyBranchScheduler(
    name="default",
    branches=["master", "next", "stable-0.10", "stable-0.11"],
    treeStableTimer=7200,
    builderNames=default_builders
  )
)

c['schedulers'].append(
  AnyBranchScheduler(
    name="disable-kvm",
    branches=["master", "next", "stable-0.10", "stbale-0.11"],
    treeStableTimer=7200,
    builderNames=disable_kvm_builders
  )
)

#c['schedulers'].append(
#  Scheduler(
#    name="all",
#    branch="master",
#    treeStableTimer=1200,
#    builderNames=allDefaultBuilders
#  )
#)

### try: Scheduler

from buildbot.scheduler import Try_Userpass
try_sched = Try_Userpass(
  "try_command",
  testBuilders,
  port=8031,
  userpass=database_authority_try
)

c['schedulers'].append(try_sched)


#####################################################################
# FACTORIES

from buildbot.process import factory
from buildbot.steps import shell
from buildbot.steps.shell import Configure, Compile, ShellCommand

## ffactory.GNUAuoconf cannot overwrite env for build targets or so ...
## just configure Env ... useless.
#f_default = factory.GNUAutoconf(
#  source=repository,
#  configureEnv={'LANG': 'C'},
#  test=None
#)
#
#f_disable_kvm = factory.GNUAutoconf(
#  source=repository,
#  configureFlags=["--disable-kvm"],
#  configureEnv={'LANG': 'C'},
#  test=None
#)

f_default = factory.BuildFactory()
f_default.addStep(Git(repourl="git://git.kernel.org/pub/scm/virt/kvm/qemu-kvm"))
f_default.addStep(Configure(command="./configure", env={'LANG': 'C'}))
f_default.addStep(Compile(command="make", env={'LANG': 'C'}))

f_disable_kvm = factory.BuildFactory()
f_disable_kvm.addStep(Git(repourl="git://git.kernel.org/pub/scm/virt/kvm/qemu-kvm"))
f_disable_kvm.addStep(Configure(command="./configure --disable-kvm", env={'LANG': 'C'}))
f_disable_kvm.addStep(Compile(command="make", env={'LANG': 'C'}))

###
# f_out_of_tree_default: mkdir outoftree; cd outoftree; ../configure
f_out_of_tree_default = factory.BuildFactory()
f_out_of_tree_default.addStep(Git(repourl="git://git.kernel.org/pub/scm/virt/kvm/qemu-kvm"))
f_out_of_tree_default.addStep(ShellCommand(command="mkdir -p outoftree", env={'LANG': 'C'}))
f_out_of_tree_default.addStep(Configure(command="cd outoftree; ../configure", env={'LANG': 'C'}))
f_out_of_tree_default.addStep(Compile(command="cd outoftree; make", env={'LANG': 'C'}))

# f_out_of_tree_disable_kvm: mkdir outoftree; cd outoftree; ../configure --disable-kvm
f_out_of_tree_disable_kvm = factory.BuildFactory()
f_out_of_tree_disable_kvm.addStep(Git(repourl="git://git.kernel.org/pub/scm/virt/kvm/qemu-kvm"))
f_out_of_tree_disable_kvm.addStep(ShellCommand(command="mkdir -p outoftree", env={'LANG': 'C'}))
f_out_of_tree_disable_kvm.addStep(Configure(command="cd outoftree; ../configure --disable-kvm", env={'LANG': 'C'}))
f_out_of_tree_disable_kvm.addStep(Compile(command="cd outoftree; make", env={'LANG': 'C'}))



#####################################################################
# BUILDERS

## Lock to avoid multiple builds of qemu-kvm on slow/tiny
## buildslaves

from buildbot.locks import SlaveLock 
slow_lock = SlaveLock("cpu")

builders = []

builders.append({
  'name': 'default_x86_64_debian_5_0',
  'slavenames': bots_x86_64_debian_5_0,
  'builddir': 'default_x86_64_debian_5_0',
  'locks': [slow_lock],
  'factory': f_default
})

builders.append({
  'name': 'default_i386_debian_5_0',
  'slavenames': bots_i386_debian_5_0,
  'builddir': 'default_i386_debian_5_0',
  'locks': [slow_lock],
  'factory': f_default
})

## disable-kvm Builders

builders.append({
  'name': 'disable_kvm_x86_64_debian_5_0',
  'slavenames': bots_x86_64_debian_5_0,
  'builddir': 'disable_kvm_x86_64_debian_5_0',
  'locks': [slow_lock],
  'factory': f_disable_kvm
})

builders.append({
  'name': 'disable_kvm_i386_debian_5_0',
  'slavenames': bots_i386_debian_5_0,
  'builddir': 'disable_kvm_i386_debian_5_0',
  'locks': [slow_lock],
  'factory': f_disable_kvm
})

## out of tree builders
### this should be arch and distro indepedent issues
### just use all slaves for that
#### But maybe arch dependent?!

builders.append({
  'name': 'default_x86_64_out_of_tree',
  'slavenames': bots_x86_64,
  'builddir': 'default_x86_64_out_of_tree',
  'locks': [slow_lock],
  'factory': f_out_of_tree_default
})


builders.append({
  'name': 'default_i386_out_of_tree',
  'slavenames': bots_i386,
  'builddir': 'default_i386_out_of_tree',
  'locks': [slow_lock],
  'factory': f_out_of_tree_default
})


builders.append({
  'name': 'disable_kvm_x86_64_out_of_tree',
  'slavenames': bots_x86_64,
  'builddir': 'disable_kvm_x86_64_out_of_tree',
  'locks': [slow_lock],
  'factory': f_out_of_tree_disable_kvm
})


builders.append({
  'name': 'disable_kvm_i386_out_of_tree',
  'slavenames': bots_i386,
  'builddir': 'disable_kvm_i386_out_of_tree',
  'locks': [slow_lock],
  'factory': f_out_of_tree_disable_kvm
})

c['builders'] = builders
